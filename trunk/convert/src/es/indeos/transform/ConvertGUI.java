/*
 * ConvertGUI.java
 *
 * Created on 19 de marzo de 2008, 09:02
 */

package es.indeos.transform;

import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.Vector;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import org.openXpertya.util.DB;
import org.openXpertya.util.Env;

/**
 *
 * @author  usuario
 */
public class ConvertGUI extends javax.swing.JFrame {
    
	private Convert conv = null;
	private Properties ctx = null;
	private String AD_Language = "es_ES";
	
    /** Creates new form ConvertGUI */
    public ConvertGUI() {
        org.openXpertya.OpenXpertya.startupEnvironment(true);
        
		ctx = Convert.initEnv();
		conv = new Convert();
		
		// AD_Language = Env.getAD_Language(Env.getCtx());
		
        initComponents();
        
        setTitle(DB.getDatabaseInfo());
        jTextField1.setText(DB.getDatabaseInfo());
        jTextField1.setSelectionStart(0);
        jTextField1.setSelectionEnd(0);
        
        jPanel1.setOpaque(false);
        jPanel2.setOpaque(false);
        jPanel3.setOpaque(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Cï¿½digo Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        cboWindow = new javax.swing.JComboBox();
        btnWindow = new javax.swing.JButton();
        cboTable = new javax.swing.JComboBox();
        cmdTable = new javax.swing.JButton();
        cboProcess = new javax.swing.JComboBox();
        cmdProcess = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Exportar"));
        cboWindow.setModel(getWindowComboBoxModel());

        btnWindow.setText("Exportar Ventana");
        btnWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWindowActionPerformed(evt);
            }
        });

        cboTable.setModel(getTableComboBoxModel());

        cmdTable.setText("Exportar Tabla");
        cmdTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTableActionPerformed(evt);
            }
        });

        cboProcess.setModel(getProcessComboBoxModel());

        cmdProcess.setText("Exportar Proceso");
        cmdProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcessActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, cboProcess, 0, 319, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, cboTable, 0, 319, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, cboWindow, 0, 319, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(cmdProcess, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(cmdTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(btnWindow, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnWindow)
                    .add(cboWindow, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cmdTable)
                    .add(cboTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cboProcess, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdProcess))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Importar"));
        jButton1.setText("Importar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton1)
                .addContainerGap(377, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jButton1)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTextField1.setEditable(false);
        jTextField1.setText("sdf");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcessActionPerformed
    	if (cboProcess.getSelectedIndex() >= 0) {
    		String[] a = ((String)cboProcess.getSelectedItem()).split(" ", 2);
    		int id = Integer.parseInt(a[0]);
    		doExport(1, id);
    	}
    }//GEN-LAST:event_cmdProcessActionPerformed

    private void cmdTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTableActionPerformed
    	if (cboTable.getSelectedIndex() >= 0) {
    		String[] a = ((String)cboTable.getSelectedItem()).split(" ", 2);
    		int id = Integer.parseInt(a[0]);
    		doExport(2, id);
    	}
    }//GEN-LAST:event_cmdTableActionPerformed

    private void btnWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWindowActionPerformed
    	if (cboWindow.getSelectedIndex() >= 0) {
    		String[] a = ((String)cboWindow.getSelectedItem()).split(" ", 2);
    		int id = Integer.parseInt(a[0]);
    		doExport(0, id);
    	}
    }//GEN-LAST:event_btnWindowActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        JFileChooser fc = getFileChooser();
        
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            
            if (JOptionPane.showConfirmDialog(this, "Se importarÃ¡ el archivo: \n\n" + f.getPath() + "\n\nDesea continuar?", "Importar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            	if (conv.importXML(ctx, f.getPath()))
            		JOptionPane.showMessageDialog(this, "ImportaciÃ³n finalizada", "Importar", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void doExport(int type, int id) {
        
        /*
         * Types:
         *  0: Window
         *  1: Process
         *  2: Table
         */
        
        JFileChooser fc = getFileChooser();
        
        if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            
            conv.export(ctx, type, id, f.getPath());
            
            JOptionPane.showMessageDialog(this, "ExportaciÃ³n finalizada en:\n\n" + f.getPath(), "ExportaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private JFileChooser getFileChooser() {
        JFileChooser fc = new JFileChooser();
        
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setMultiSelectionEnabled(false);
        
        return fc;
    }
    
    private Vector fetchRows(String sql) {
    	Vector v = new Vector();
    	PreparedStatement ps = DB.prepareStatement(sql, null);
    	
    	try {
    		ResultSet rs = ps.executeQuery();
    		
    		while (rs.next()) {
    			String s = "";
    			for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {
    				Object x = rs.getObject(i) != null ? rs.getObject(i) : "";
    				s += x.toString() + " ";
    			}
    			v.add(s);
    		}
    		
    		rs.close();
    		ps.close();
    	} catch (SQLException e) {
    		e.printStackTrace();
    	} finally {
    		try {
    			ps.close();
    		} catch (SQLException e) {}
    	}
    	
    	return v;
    }
    
    private ComboBoxModel getWindowComboBoxModel() {
        return new DefaultComboBoxModel(fetchRows("SELECT AD_Window.AD_Window_ID, '#', AD_Window.Name, '#', AD_Window_trl.Name FROM AD_Window LEFT JOIN AD_Window_trl ON (AD_Window_trl.AD_Window_id=AD_Window.AD_Window_id and AD_Window_trl.ad_language = '" + AD_Language + "') ORDER BY AD_Window_ID"));
    }
    
    private ComboBoxModel getProcessComboBoxModel() {
        return new DefaultComboBoxModel(fetchRows("SELECT ad_process.ad_process_ID, '#', ad_process.Name, '#', ad_process_trl.Name FROM ad_process LEFT JOIN ad_process_trl ON (ad_process_trl.ad_process_id=ad_process.ad_process_id and ad_process_trl.ad_language = '" + AD_Language + "') ORDER BY ad_process_ID;"));
    }
    
    private ComboBoxModel getTableComboBoxModel() {
        return new DefaultComboBoxModel(fetchRows("SELECT AD_Table.AD_Table_ID, '#', AD_Table.TableName, '#', AD_Table.Name, '#', AD_Table_trl.Name FROM AD_Table LEFT JOIN AD_Table_trl ON (AD_Table_trl.AD_Table_id=AD_Table.AD_Table_id and AD_Table_trl.ad_language = '" + AD_Language + "') ORDER BY AD_Table.TableName;"));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConvertGUI().setVisible(true);
            }
        });
    }
    
    // Declaraciï¿½n de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JButton btnWindow;
    private javax.swing.JComboBox cboProcess;
    private javax.swing.JComboBox cboTable;
    private javax.swing.JComboBox cboWindow;
    private javax.swing.JButton cmdProcess;
    private javax.swing.JButton cmdTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    // Fin de declaraciï¿½n de variables//GEN-END:variables
    
}
